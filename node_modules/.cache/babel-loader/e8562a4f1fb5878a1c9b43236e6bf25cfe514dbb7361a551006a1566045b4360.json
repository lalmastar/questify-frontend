{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { allQuestions } from '../features/asyncThunks/questions.thunk';\nimport { pageQuery } from '../features/asyncThunks/queries.thunk';\nconst useFetchHomeData = _ref => {\n  _s();\n  let {\n    pageNum,\n    questionAdded,\n    answerAdded\n  } = _ref;\n  const [pageData, setPageData] = useState([]);\n  const [totalPageData, setTotalPageData] = useState(0);\n  const [questionsData, setQuestionsData] = useState([]);\n  const [isloading, setIsloading] = useState(true);\n  const [hasmore, setHasmore] = useState(false);\n  const [error, setError] = useState(null);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setIsloading(true);\n    async function fetchData() {\n      var _pgData$payload, _pgData$payload2, _pgData$payload2$ques, _pgData$payload3, _newData$payload, _pgData$payload5, _pgData$payload6;\n      const pgData = await dispatch(pageQuery({\n        page: pageNum,\n        limit: 10\n      }));\n      setIsloading(false);\n      if (!((_pgData$payload = pgData.payload) !== null && _pgData$payload !== void 0 && _pgData$payload.error) && (_pgData$payload2 = pgData.payload) !== null && _pgData$payload2 !== void 0 && (_pgData$payload2$ques = _pgData$payload2.questions) !== null && _pgData$payload2$ques !== void 0 && _pgData$payload2$ques.length) {\n        setPageData(prevData => {\n          const uniqueQuestions = pgData.payload.questions.filter(q => !prevData.some(pq => pq._id === q._id));\n          return [...prevData, ...uniqueQuestions];\n        });\n        setTotalPageData(pgData.payload.questionsCount);\n        setHasmore(pgData.payload.questionsCount > pageData.length + 5);\n      } else if ((_pgData$payload3 = pgData.payload) !== null && _pgData$payload3 !== void 0 && _pgData$payload3.error) {\n        var _pgData$payload4;\n        setError((_pgData$payload4 = pgData.payload) === null || _pgData$payload4 === void 0 ? void 0 : _pgData$payload4.error);\n      }\n      const newData = await dispatch(allQuestions({\n        limit: 10,\n        page: 1\n      }));\n      if (!((_newData$payload = newData.payload) !== null && _newData$payload !== void 0 && _newData$payload.error)) setQuestionsData(newData.payload);else if ((_pgData$payload5 = pgData.payload) !== null && _pgData$payload5 !== void 0 && _pgData$payload5.error) setError((_pgData$payload6 = pgData.payload) === null || _pgData$payload6 === void 0 ? void 0 : _pgData$payload6.error);\n    }\n    fetchData();\n  }, [pageNum]);\n  return {\n    isloading,\n    hasmore,\n    pageData,\n    totalPageData,\n    questionsData,\n    error\n  };\n};\n_s(useFetchHomeData, \"1lsUMunHJDRdm8EPsJRCAzVemlg=\", false, function () {\n  return [useDispatch];\n});\nexport default useFetchHomeData;","map":{"version":3,"names":["useState","useEffect","useDispatch","allQuestions","pageQuery","useFetchHomeData","_ref","_s","pageNum","questionAdded","answerAdded","pageData","setPageData","totalPageData","setTotalPageData","questionsData","setQuestionsData","isloading","setIsloading","hasmore","setHasmore","error","setError","dispatch","fetchData","_pgData$payload","_pgData$payload2","_pgData$payload2$ques","_pgData$payload3","_newData$payload","_pgData$payload5","_pgData$payload6","pgData","page","limit","payload","questions","length","prevData","uniqueQuestions","filter","q","some","pq","_id","questionsCount","_pgData$payload4","newData"],"sources":["C:/Users/lalmastar/OneDrive/Desktop/Questify/questify-frontend/src/hooks/useFetchHomeData.hooks.jsx"],"sourcesContent":["import { useState,useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { allQuestions } from '../features/asyncThunks/questions.thunk';\r\nimport { pageQuery } from '../features/asyncThunks/queries.thunk';\r\n\r\nconst useFetchHomeData = ({pageNum,questionAdded,answerAdded}) => {\r\n    const [pageData, setPageData] = useState([]);\r\n    const [totalPageData, setTotalPageData] = useState(0);\r\n    const [questionsData, setQuestionsData] = useState([]);\r\n    const [isloading, setIsloading] = useState(true);\r\n    const [hasmore,setHasmore] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const dispatch=useDispatch()\r\n\r\n    useEffect(()=>{\r\n        setIsloading(true);\r\n        async function fetchData() {\r\n          const pgData = await dispatch(pageQuery({ page: pageNum, limit: 10 }));\r\n          setIsloading(false);\r\n          if((!pgData.payload?.error) && pgData.payload?.questions?.length ){\r\n            setPageData(prevData => {\r\n              const uniqueQuestions = pgData.payload.questions.filter(q => !prevData.some(pq => pq._id === q._id));\r\n              return [...prevData, ...uniqueQuestions];\r\n            });\r\n            setTotalPageData(pgData.payload.questionsCount);\r\n            setHasmore((pgData.payload.questionsCount>(pageData.length+5)))\r\n          }else if(pgData.payload?.error){\r\n            setError(pgData.payload?.error)\r\n          }\r\n          const newData = await dispatch(allQuestions({ limit: 10, page: 1 }));\r\n          if(!newData.payload?.error)\r\n            setQuestionsData(newData.payload);\r\n          else if(pgData.payload?.error)\r\n              setError(pgData.payload?.error)\r\n        }\r\n        fetchData();\r\n    },[pageNum])\r\n  \r\n    return {isloading,hasmore,pageData,totalPageData,questionsData,error}\r\n}\r\n\r\nexport default useFetchHomeData"],"mappings":";AAAA,SAASA,QAAQ,EAACC,SAAS,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,YAAY,QAAQ,yCAAyC;AACtE,SAASC,SAAS,QAAQ,uCAAuC;AAEjE,MAAMC,gBAAgB,GAAGC,IAAA,IAAyC;EAAAC,EAAA;EAAA,IAAxC;IAACC,OAAO;IAACC,aAAa;IAACC;EAAW,CAAC,GAAAJ,IAAA;EACzD,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACmB,OAAO,EAACC,UAAU,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMuB,QAAQ,GAACrB,WAAW,EAAE;EAE5BD,SAAS,CAAC,MAAI;IACViB,YAAY,CAAC,IAAI,CAAC;IAClB,eAAeM,SAASA,CAAA,EAAG;MAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA;MACzB,MAAMC,MAAM,GAAG,MAAMT,QAAQ,CAACnB,SAAS,CAAC;QAAE6B,IAAI,EAAEzB,OAAO;QAAE0B,KAAK,EAAE;MAAG,CAAC,CAAC,CAAC;MACtEhB,YAAY,CAAC,KAAK,CAAC;MACnB,IAAI,GAAAO,eAAA,GAACO,MAAM,CAACG,OAAO,cAAAV,eAAA,eAAdA,eAAA,CAAgBJ,KAAK,MAAAK,gBAAA,GAAKM,MAAM,CAACG,OAAO,cAAAT,gBAAA,gBAAAC,qBAAA,GAAdD,gBAAA,CAAgBU,SAAS,cAAAT,qBAAA,eAAzBA,qBAAA,CAA2BU,MAAM,EAAE;QAChEzB,WAAW,CAAC0B,QAAQ,IAAI;UACtB,MAAMC,eAAe,GAAGP,MAAM,CAACG,OAAO,CAACC,SAAS,CAACI,MAAM,CAACC,CAAC,IAAI,CAACH,QAAQ,CAACI,IAAI,CAACC,EAAE,IAAIA,EAAE,CAACC,GAAG,KAAKH,CAAC,CAACG,GAAG,CAAC,CAAC;UACpG,OAAO,CAAC,GAAGN,QAAQ,EAAE,GAAGC,eAAe,CAAC;QAC1C,CAAC,CAAC;QACFzB,gBAAgB,CAACkB,MAAM,CAACG,OAAO,CAACU,cAAc,CAAC;QAC/CzB,UAAU,CAAEY,MAAM,CAACG,OAAO,CAACU,cAAc,GAAElC,QAAQ,CAAC0B,MAAM,GAAC,CAAE,CAAE;MACjE,CAAC,MAAK,KAAAT,gBAAA,GAAGI,MAAM,CAACG,OAAO,cAAAP,gBAAA,eAAdA,gBAAA,CAAgBP,KAAK,EAAC;QAAA,IAAAyB,gBAAA;QAC7BxB,QAAQ,EAAAwB,gBAAA,GAACd,MAAM,CAACG,OAAO,cAAAW,gBAAA,uBAAdA,gBAAA,CAAgBzB,KAAK,CAAC;MACjC;MACA,MAAM0B,OAAO,GAAG,MAAMxB,QAAQ,CAACpB,YAAY,CAAC;QAAE+B,KAAK,EAAE,EAAE;QAAED,IAAI,EAAE;MAAE,CAAC,CAAC,CAAC;MACpE,IAAG,GAAAJ,gBAAA,GAACkB,OAAO,CAACZ,OAAO,cAAAN,gBAAA,eAAfA,gBAAA,CAAiBR,KAAK,GACxBL,gBAAgB,CAAC+B,OAAO,CAACZ,OAAO,CAAC,CAAC,KAC/B,KAAAL,gBAAA,GAAGE,MAAM,CAACG,OAAO,cAAAL,gBAAA,eAAdA,gBAAA,CAAgBT,KAAK,EACzBC,QAAQ,EAAAS,gBAAA,GAACC,MAAM,CAACG,OAAO,cAAAJ,gBAAA,uBAAdA,gBAAA,CAAgBV,KAAK,CAAC;IACrC;IACAG,SAAS,EAAE;EACf,CAAC,EAAC,CAAChB,OAAO,CAAC,CAAC;EAEZ,OAAO;IAACS,SAAS;IAACE,OAAO;IAACR,QAAQ;IAACE,aAAa;IAACE,aAAa;IAACM;EAAK,CAAC;AACzE,CAAC;AAAAd,EAAA,CAnCKF,gBAAgB;EAAA,QAQHH,WAAW;AAAA;AA6B9B,eAAeG,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}