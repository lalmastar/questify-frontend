{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  questionPage: false,\n  answerPage: {\n    click: false,\n    questionID: \"\",\n    question: \"\"\n  },\n  questionAdded: 0,\n  answerAdded: 0\n};\nexport const QNAPageSlice = createSlice({\n  name: \"QNAPageHandler\",\n  initialState,\n  reducers: {\n    handleQuestionPage: (state, action) => {\n      state.questionPage = action.payload;\n    },\n    handleAnswerPage: (state, action) => {\n      state.answerPage.click = action.payload.click;\n      if (action.payload.click) {\n        state.answerPage.questionID = action.payload.questionID;\n        state.answerPage.question = action.payload.question;\n      }\n    },\n    handleQuestionAdded: (state, action) => {\n      state.questionAdded = action.payload;\n    },\n    handleAnswerAdded: (state, action) => {\n      state.answerAdded = action.payload;\n    }\n  }\n});\nexport const {\n  handleAnswerPage,\n  handleQuestionPage,\n  handleQuestionAdded,\n  handleAnswerAdded\n} = QNAPageSlice.actions;\nexport default QNAPageSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","questionPage","answerPage","click","questionID","question","questionAdded","answerAdded","QNAPageSlice","name","reducers","handleQuestionPage","state","action","payload","handleAnswerPage","handleQuestionAdded","handleAnswerAdded","actions","reducer"],"sources":["C:/Users/lalmastar/OneDrive/Desktop/Questify/questify-frontend/src/features/questionNanswerPageHandler/QNAPageSlice.jsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\r\n\r\nconst initialState={\r\n    questionPage:false,\r\n    answerPage:{\r\n        click:false,\r\n        questionID:\"\",\r\n        question:\"\"\r\n    },\r\n    questionAdded:0,\r\n    answerAdded:0\r\n}\r\n\r\nexport const QNAPageSlice=createSlice({\r\n    name:\"QNAPageHandler\",\r\n    initialState,\r\n    reducers:{\r\n        handleQuestionPage:(state,action)=>{\r\n            state.questionPage=action.payload;\r\n        },\r\n        handleAnswerPage:(state,action)=>{\r\n            state.answerPage.click=action.payload.click;\r\n            if(action.payload.click){\r\n                state.answerPage.questionID=action.payload.questionID;\r\n                state.answerPage.question=action.payload.question;\r\n            }\r\n        },\r\n        handleQuestionAdded:(state,action)=>{\r\n            state.questionAdded=action.payload;\r\n        },\r\n        handleAnswerAdded:(state,action)=>{\r\n            state.answerAdded=action.payload;\r\n        }\r\n    }    \r\n})\r\n\r\nexport const {handleAnswerPage,handleQuestionPage,handleQuestionAdded,handleAnswerAdded} = QNAPageSlice.actions;\r\nexport default QNAPageSlice.reducer"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAC;EACfC,YAAY,EAAC,KAAK;EAClBC,UAAU,EAAC;IACPC,KAAK,EAAC,KAAK;IACXC,UAAU,EAAC,EAAE;IACbC,QAAQ,EAAC;EACb,CAAC;EACDC,aAAa,EAAC,CAAC;EACfC,WAAW,EAAC;AAChB,CAAC;AAED,OAAO,MAAMC,YAAY,GAACT,WAAW,CAAC;EAClCU,IAAI,EAAC,gBAAgB;EACrBT,YAAY;EACZU,QAAQ,EAAC;IACLC,kBAAkB,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MAC/BD,KAAK,CAACX,YAAY,GAACY,MAAM,CAACC,OAAO;IACrC,CAAC;IACDC,gBAAgB,EAACA,CAACH,KAAK,EAACC,MAAM,KAAG;MAC7BD,KAAK,CAACV,UAAU,CAACC,KAAK,GAACU,MAAM,CAACC,OAAO,CAACX,KAAK;MAC3C,IAAGU,MAAM,CAACC,OAAO,CAACX,KAAK,EAAC;QACpBS,KAAK,CAACV,UAAU,CAACE,UAAU,GAACS,MAAM,CAACC,OAAO,CAACV,UAAU;QACrDQ,KAAK,CAACV,UAAU,CAACG,QAAQ,GAACQ,MAAM,CAACC,OAAO,CAACT,QAAQ;MACrD;IACJ,CAAC;IACDW,mBAAmB,EAACA,CAACJ,KAAK,EAACC,MAAM,KAAG;MAChCD,KAAK,CAACN,aAAa,GAACO,MAAM,CAACC,OAAO;IACtC,CAAC;IACDG,iBAAiB,EAACA,CAACL,KAAK,EAACC,MAAM,KAAG;MAC9BD,KAAK,CAACL,WAAW,GAACM,MAAM,CAACC,OAAO;IACpC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACC,gBAAgB;EAACJ,kBAAkB;EAACK,mBAAmB;EAACC;AAAiB,CAAC,GAAGT,YAAY,CAACU,OAAO;AAC/G,eAAeV,YAAY,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}