{"ast":null,"code":"import axios from \"axios\";\nexport const axiosInstance = axios.create({\n  // baseURL: \"https://questify-backend-9o4u.onrender.com\",\n  baseURL: \"http://localhost:3500\",\n  withCredentials: true\n});\nexport const axiosAuthInstance = axios.create({\n  // baseURL: \"https://questify-backend-9o4u.onrender.com\",\n  baseURL: \"http://localhost:3500\",\n  withCredentials: true,\n  headers: {\n    \"content-Type\": \"application/json\",\n    'Accept': 'application/json'\n  }\n});\naxiosInstance.interceptors.request.use(config => {\n  const accessToken = localStorage.getItem(\"questify-log-isauth-T\");\n  if (accessToken) {\n    config.headers.Authorization = `Bearer ${accessToken}`;\n    return config;\n  }\n});\naxiosAuthInstance.interceptors.request.use(config => {\n  return config;\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async error => {\n  var _error$response;\n  const prevRequest = error === null || error === void 0 ? void 0 : error.config;\n  if ((error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 403 && !(prevRequest !== null && prevRequest !== void 0 && prevRequest.sent)) {\n    prevRequest.sent = true;\n    const newAccessToken = await refreshToken();\n    localStorage.setItem(\"questify-log-isauth-T\", newAccessToken.token);\n    prevRequest.headers['Authorization'] = `Bearer ${newAccessToken.token}`;\n    return axiosInstance(prevRequest);\n  }\n  return Promise.reject(error);\n});\n\n//Auth based Queries\n\nexport const login = async _ref => {\n  let {\n    email,\n    password\n  } = _ref;\n  const response = await axiosAuthInstance.post(\"/api/auth/v4/user/login\", {\n    email: email,\n    password: password\n  });\n  return response.data;\n};\nexport const logout = async () => {\n  const response = await axiosAuthInstance.post(\"/api/auth/v4/user/logout\");\n  return response.data;\n};\nexport const register = async data => {\n  const response = await axiosAuthInstance.post(\"/api/auth/v4/user/register\", data);\n  return response.data;\n};\nexport const refreshToken = async () => {\n  const response = await axiosAuthInstance.get(\"/api/auth/v4/refresh_jwt\");\n  return response.data;\n};\nexport const setAvatar = async data => {\n  const response = await axiosInstance.post(\"/api/auth/v4/set_avatar\", data);\n  return response.data;\n};\nexport const getUserData = async () => {\n  const response = await axiosInstance.get(\"/api/auth/v4/user/details\");\n  return response.data;\n};\n\n//Questions based Queries\n\nexport const getAllQuestions = async _ref2 => {\n  let {\n    limit,\n    page\n  } = _ref2;\n  const response = await axiosInstance.get(`/api/question/all_question?limit=${limit}&page=${page}`);\n  return response.data;\n};\nexport const addQuestion = async data => {\n  const response = await axiosInstance.post(\"/api/question/add_question\", data);\n  return response.data;\n};\nexport const upvoteQuestion = async _ref3 => {\n  let {\n    question_id\n  } = _ref3;\n  const response = await axiosInstance.put(`/api/question/${question_id}/upvote`);\n  return response.data;\n};\nexport const downvoteQuestion = async _ref4 => {\n  let {\n    question_id\n  } = _ref4;\n  const response = await axiosInstance.put(`/api/question/${question_id}/downvote`);\n  return response.data;\n};\nexport const myQuestions = async () => {\n  const response = await axiosInstance.get(\"/api/question/my_questions\");\n  return response.data;\n};\nexport const recommendedQuestions = async _ref5 => {\n  let {\n    question\n  } = _ref5;\n  const response = await axiosInstance.get(`/api/question/${question}`);\n  return response.data;\n};\n\n//Answer based Queries\n\nexport const addAnswer = async _ref6 => {\n  let {\n    question_id,\n    answer\n  } = _ref6;\n  const response = await axiosInstance.post(`/api/answer/${question_id}/add_answer`, {\n    answer\n  });\n  return response.data;\n};\nexport const myAnswer = async () => {\n  const response = await axiosInstance.get(`/api/answer/my_answers`);\n  return response.data;\n};\nexport const upvoteAnswer = async _ref7 => {\n  let {\n    answer_id\n  } = _ref7;\n  const response = await axiosInstance.put(`/api/answer/${answer_id}/upvote`);\n  return response.data;\n};\nexport const downvoteAnswer = async _ref8 => {\n  let {\n    answer_id\n  } = _ref8;\n  const response = await axiosInstance.put(`/api/answer/${answer_id}/downvote`);\n  return response.data;\n};\n\n//Query based Queries\n\nexport const singleQuery = async _ref9 => {\n  let {\n    question_id\n  } = _ref9;\n  const response = await axiosInstance.get(`/api/all_queries/${question_id}`);\n  return response.data;\n};\nexport const pageQueries = async _ref10 => {\n  let {\n    page,\n    limit\n  } = _ref10;\n  const response = await axiosInstance.get(`/api/all_queries/getPageQueries?limit=${limit}&page=${page}`);\n  return response.data;\n};\nexport const searchQuery = async _ref11 => {\n  let {\n    search\n  } = _ref11;\n  const response = await axiosInstance.get(`/api/all_queries/search?q=${search}`);\n  return response.data;\n};\n\n//user\nexport const follow = async _ref12 => {\n  let {\n    user\n  } = _ref12;\n  const response = await axiosInstance.put(`/user/follow/${user}`);\n  return response.data;\n};\nexport const followers = async () => {\n  const response = await axiosInstance.get(`/user/get_followers`);\n  return response.data;\n};\nexport const followings = async () => {\n  const response = await axiosInstance.get(`/user/get_following`);\n  return response.data;\n};","map":{"version":3,"names":["axios","axiosInstance","create","baseURL","withCredentials","axiosAuthInstance","headers","interceptors","request","use","config","accessToken","localStorage","getItem","Authorization","response","error","_error$response","prevRequest","status","sent","newAccessToken","refreshToken","setItem","token","Promise","reject","login","_ref","email","password","post","data","logout","register","get","setAvatar","getUserData","getAllQuestions","_ref2","limit","page","addQuestion","upvoteQuestion","_ref3","question_id","put","downvoteQuestion","_ref4","myQuestions","recommendedQuestions","_ref5","question","addAnswer","_ref6","answer","myAnswer","upvoteAnswer","_ref7","answer_id","downvoteAnswer","_ref8","singleQuery","_ref9","pageQueries","_ref10","searchQuery","_ref11","search","follow","_ref12","user","followers","followings"],"sources":["C:/Users/lalmastar/OneDrive/Desktop/Questify/questify-frontend/src/config/routes.config.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const axiosInstance = axios.create({\r\n  // baseURL: \"https://questify-backend-9o4u.onrender.com\",\r\n  baseURL: \"http://localhost:3500\",\r\n  withCredentials: true,\r\n});\r\n\r\nexport const axiosAuthInstance = axios.create({\r\n  // baseURL: \"https://questify-backend-9o4u.onrender.com\",\r\n  baseURL: \"http://localhost:3500\",\r\n  withCredentials: true,\r\n  headers: {\r\n    \"content-Type\": \"application/json\",\r\n    'Accept': 'application/json',\r\n  },\r\n});\r\n\r\naxiosInstance.interceptors.request.use((config) => {\r\n  const accessToken = localStorage.getItem(\"questify-log-isauth-T\");\r\n  if (accessToken) {\r\n    config.headers.Authorization = `Bearer ${accessToken}`;\r\n    return config;\r\n  }\r\n});\r\n\r\naxiosAuthInstance.interceptors.request.use((config) => {\r\n  return config;\r\n});\r\n\r\naxiosInstance.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  async (error) => {\r\n    const prevRequest = error?.config;\r\n    if (error?.response?.status === 403 && !prevRequest?.sent) {\r\n      prevRequest.sent = true;\r\n      const newAccessToken = await refreshToken();\r\n      localStorage.setItem(\"questify-log-isauth-T\",newAccessToken.token)\r\n        prevRequest.headers['Authorization'] = `Bearer ${newAccessToken.token}`;\r\n        return axiosInstance(prevRequest);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n//Auth based Queries\r\n\r\nexport const login = async ({ email, password }) => {\r\n  const response = await axiosAuthInstance.post(\"/api/auth/v4/user/login\", {\r\n    email: email,\r\n    password: password,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const logout = async () => {\r\n  const response = await axiosAuthInstance.post(\"/api/auth/v4/user/logout\");\r\n  return response.data;\r\n};\r\n\r\nexport const register = async (data) => {\r\n  const response = await axiosAuthInstance.post(\r\n    \"/api/auth/v4/user/register\",\r\n    data\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const refreshToken = async () => {\r\n  const response = await axiosAuthInstance.get(\"/api/auth/v4/refresh_jwt\");\r\n  return response.data;\r\n};\r\n\r\nexport const setAvatar = async (data) => {\r\n  const response = await axiosInstance.post(\"/api/auth/v4/set_avatar\", data);\r\n  return response.data;\r\n\r\n};\r\n\r\nexport const getUserData=async () =>{\r\n  const response = await axiosInstance.get(\"/api/auth/v4/user/details\");\r\n  return response.data;\r\n}\r\n\r\n//Questions based Queries\r\n\r\nexport const getAllQuestions = async ({ limit, page }) => {\r\n  const response = await axiosInstance.get(\r\n    `/api/question/all_question?limit=${limit}&page=${page}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const addQuestion = async (data) => {\r\n  const response = await axiosInstance.post(\"/api/question/add_question\", data);\r\n  return response.data;\r\n};\r\n\r\nexport const upvoteQuestion = async ({ question_id }) => {\r\n  const response = await axiosInstance.put(\r\n    `/api/question/${question_id}/upvote`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const downvoteQuestion = async ({ question_id }) => {\r\n  const response = await axiosInstance.put(\r\n    `/api/question/${question_id}/downvote`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const myQuestions = async () => {\r\n  const response = await axiosInstance.get(\"/api/question/my_questions\");\r\n  return response.data;\r\n};\r\n\r\nexport const recommendedQuestions = async ({ question }) => {\r\n  const response = await axiosInstance.get(`/api/question/${question}`);\r\n  return response.data;\r\n};\r\n\r\n//Answer based Queries\r\n\r\nexport const addAnswer = async ({ question_id, answer }) => {\r\n  const response =await axiosInstance.post(`/api/answer/${question_id}/add_answer`, {\r\n    answer,\r\n  });\r\n  return response.data;\r\n};\r\n\r\nexport const myAnswer = async () => {\r\n  const response =await axiosInstance.get(`/api/answer/my_answers`);\r\n  return response.data;\r\n};\r\n\r\nexport const upvoteAnswer = async ({ answer_id }) => {\r\n  const response =await axiosInstance.put(`/api/answer/${answer_id}/upvote`);\r\n  return response.data;\r\n};\r\n\r\nexport const downvoteAnswer = async ({ answer_id }) => {\r\n  const response =await axiosInstance.put(`/api/answer/${answer_id}/downvote`);\r\n  return response.data;\r\n};\r\n\r\n//Query based Queries\r\n\r\nexport const singleQuery = async ({ question_id }) => {\r\n  const response = await axiosInstance.get(`/api/all_queries/${question_id}`);\r\n  return response.data;\r\n};\r\n\r\nexport const pageQueries = async ({ page, limit }) => {\r\n  const response = await axiosInstance.get(\r\n    `/api/all_queries/getPageQueries?limit=${limit}&page=${page}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\nexport const searchQuery = async ({ search }) => {\r\n  const response = await axiosInstance.get(\r\n    `/api/all_queries/search?q=${search}`\r\n  );\r\n  return response.data;\r\n};\r\n\r\n//user\r\nexport const follow=async ({user})=>{\r\n  const response = await axiosInstance.put(`/user/follow/${user}`)\r\n  return response.data;\r\n}\r\n\r\nexport const followers = async () =>{\r\n  const response = await axiosInstance.get(`/user/get_followers`);\r\n  return response.data;\r\n}\r\n\r\nexport const followings = async () =>{\r\n  const response = await axiosInstance.get(`/user/get_following`);\r\n  return response.data;\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}