{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { add_Answer, upvote_Answer, downvote_Answer, my_Answer } from \"../asyncThunks/answers.thunk\";\nexport const answersSlice = createSlice({\n  name: \"answers\",\n  initialState: {\n    isAddAnswerLoading: false,\n    addAnswerData: {},\n    addAnswerError: null,\n    isUpvoteAnswerLoading: false,\n    upvoteAnswerData: {},\n    upvoteAnswerError: null,\n    isDownvoteAnswerLoading: false,\n    downvoteAnswerData: {},\n    downvoteAnswerError: null,\n    isMyAnswerLoading: false,\n    myAnswerData: [],\n    myAnswerError: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(add_Answer.pending, state => {\n      state.isAddAnswerLoading = true;\n    }).addCase(add_Answer.fulfilled, (state, action) => {\n      state.addAnswerData = action.payload;\n      state.isAddAnswerLoading = false;\n    }).addCase(add_Answer.rejected, (state, action) => {\n      state.addAnswerError = action.payload;\n      state.isAddAnswerLoading = false;\n    }).addCase(upvote_Answer.pending, state => {\n      state.isUpvoteAnswerLoading = true;\n    }).addCase(upvote_Answer.fulfilled, (state, action) => {\n      state.upvoteAnswerData = action.payload;\n      state.isUpvoteAnswerLoading = false;\n    }).addCase(upvote_Answer.rejected, (state, action) => {\n      state.upvoteAnswerError = action.payload;\n      state.isUpvoteAnswerLoading = false;\n    }).addCase(downvote_Answer.pending, state => {\n      state.isDownvoteAnswerLoading = true;\n    }).addCase(downvote_Answer.fulfilled, (state, action) => {\n      state.downvoteAnswerData = action.payload;\n      state.isDownvoteAnswerLoading = false;\n    }).addCase(downvote_Answer.rejected, (state, action) => {\n      state.downvoteAnswerError = action.payload;\n      state.isDownvoteAnswerLoading = false;\n    }).addCase(my_Answer.pending, state => {\n      state.isMyAnswerLoading = true;\n    }).addCase(my_Answer.fulfilled, (state, action) => {\n      state.myAnswerData = action.payload;\n      state.isMyAnswerLoading = false;\n    }).addCase(my_Answer.rejected, (state, action) => {\n      state.myAnswerError = action.payload;\n      state.isMyAnswerLoading = false;\n    });\n  }\n});\nexport default answersSlice.reducer;","map":{"version":3,"names":["createSlice","add_Answer","upvote_Answer","downvote_Answer","my_Answer","answersSlice","name","initialState","isAddAnswerLoading","addAnswerData","addAnswerError","isUpvoteAnswerLoading","upvoteAnswerData","upvoteAnswerError","isDownvoteAnswerLoading","downvoteAnswerData","downvoteAnswerError","isMyAnswerLoading","myAnswerData","myAnswerError","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["C:/Users/lalmastar/OneDrive/Desktop/Questify/questify-frontend/src/features/answers/answersSlice.jsx"],"sourcesContent":["    import { createSlice } from \"@reduxjs/toolkit\";\r\n    import { add_Answer,upvote_Answer,downvote_Answer,my_Answer } from \"../asyncThunks/answers.thunk\"\r\n\r\n    export const answersSlice = createSlice({\r\n        name: \"answers\",\r\n        initialState:{ \r\n            isAddAnswerLoading:false,\r\n            addAnswerData:{},\r\n            addAnswerError:null,\r\n            isUpvoteAnswerLoading:false,\r\n            upvoteAnswerData:{},\r\n            upvoteAnswerError:null,\r\n            isDownvoteAnswerLoading:false,\r\n            downvoteAnswerData:{},\r\n            downvoteAnswerError:null,\r\n            isMyAnswerLoading:false,\r\n            myAnswerData:[],\r\n            myAnswerError:null,\r\n        },\r\n        reducers:{},\r\n        extraReducers:(builder)=>{\r\n            builder.addCase(add_Answer.pending,(state)=>{\r\n                state.isAddAnswerLoading=true;\r\n            })\r\n            .addCase(add_Answer.fulfilled,(state,action)=>{\r\n                state.addAnswerData=action.payload;\r\n                state.isAddAnswerLoading=false;\r\n            })\r\n            .addCase(add_Answer.rejected,(state,action)=>{\r\n                state.addAnswerError=action.payload;\r\n                state.isAddAnswerLoading=false;\r\n            })\r\n            .addCase(upvote_Answer.pending,(state)=>{\r\n                state.isUpvoteAnswerLoading=true;\r\n            })\r\n            .addCase(upvote_Answer.fulfilled,(state,action)=>{\r\n                state.upvoteAnswerData=action.payload;\r\n                state.isUpvoteAnswerLoading=false;\r\n            })\r\n            .addCase(upvote_Answer.rejected,(state,action)=>{\r\n                state.upvoteAnswerError=action.payload;\r\n                state.isUpvoteAnswerLoading=false;\r\n            })\r\n            .addCase(downvote_Answer.pending,(state)=>{\r\n                state.isDownvoteAnswerLoading=true;\r\n            })\r\n            .addCase(downvote_Answer.fulfilled,(state,action)=>{\r\n                state.downvoteAnswerData=action.payload;\r\n                state.isDownvoteAnswerLoading=false;\r\n            })\r\n            .addCase(downvote_Answer.rejected,(state,action)=>{\r\n                state.downvoteAnswerError=action.payload;\r\n                state.isDownvoteAnswerLoading=false;\r\n            })\r\n            .addCase(my_Answer.pending,(state)=>{\r\n                state.isMyAnswerLoading=true;\r\n            })\r\n            .addCase(my_Answer.fulfilled,(state,action)=>{\r\n                state.myAnswerData=action.payload;\r\n                state.isMyAnswerLoading=false;\r\n            })\r\n            .addCase(my_Answer.rejected,(state,action)=>{\r\n                state.myAnswerError=action.payload;\r\n                state.isMyAnswerLoading=false;\r\n            })\r\n        }\r\n    })\r\n\r\n    export default answersSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}