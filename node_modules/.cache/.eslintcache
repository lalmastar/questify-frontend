[{"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\index.js":"1","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\App.jsx":"2","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\app\\store.js":"3","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Search.page.jsx":"4","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\user\\userSlice.jsx":"5","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\answers\\answersSlice.jsx":"6","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\queries\\queriesSlice.jsx":"7","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\questionNanswerPageHandler\\QNAPageSlice.jsx":"8","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\questions\\questionsSlice.jsx":"9","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\index.jsx":"10","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\index.jsx":"11","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\asyncThunks\\questions.thunk.jsx":"12","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\asyncThunks\\queries.thunk.jsx":"13","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Home.page.jsx":"14","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\asyncThunks\\user.thunk.jsx":"15","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\asyncThunks\\answers.thunk.jsx":"16","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Login.page.jsx":"17","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Questions.page.jsx":"18","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Register.page.jsx":"19","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Question.page.jsx":"20","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Profile.page.jsx":"21","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\SelectAvatar.page.jsx":"22","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\AutherWriteBox.component.jsx":"23","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\AllQuestions.component.jsx":"24","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\Nav.component.jsx":"25","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\AddQuestion.component.jsx":"26","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileBody.component.jsx":"27","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\QuestionNAnswers.component.jsx":"28","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\AddAnswer.component.jsx":"29","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileDetails.component.jsx":"30","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\Follow.component.jsx":"31","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\MyAnswers.component.jsx":"32","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\MyQuestions.component.jsx":"33","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserInputBox.component.jsx":"34","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\config\\routes.config.jsx":"35","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\hooks\\useFetchHomeData.hooks.jsx":"36","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileFollowing.component.jsx":"37","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileMyQuestions.component.jsx":"38","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileFollowers.component.jsx":"39","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileMyAnswers.component.jsx":"40","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\assets\\index.js":"41"},{"size":522,"mtime":1689833869537,"results":"42","hashOfConfig":"43"},{"size":1393,"mtime":1689233799855,"results":"44","hashOfConfig":"43"},{"size":616,"mtime":1689233799855,"results":"45","hashOfConfig":"43"},{"size":2525,"mtime":1689233799882,"results":"46","hashOfConfig":"43"},{"size":4880,"mtime":1689790517996,"results":"47","hashOfConfig":"43"},{"size":2782,"mtime":1689233799875,"results":"48","hashOfConfig":"43"},{"size":1891,"mtime":1689233799877,"results":"49","hashOfConfig":"43"},{"size":1131,"mtime":1689233799878,"results":"50","hashOfConfig":"43"},{"size":3898,"mtime":1689233799878,"results":"51","hashOfConfig":"43"},{"size":351,"mtime":1689233799883,"results":"52","hashOfConfig":"43"},{"size":791,"mtime":1689233799874,"results":"53","hashOfConfig":"43"},{"size":2419,"mtime":1689233799876,"results":"54","hashOfConfig":"43"},{"size":1172,"mtime":1689233799876,"results":"55","hashOfConfig":"43"},{"size":2311,"mtime":1689233799880,"results":"56","hashOfConfig":"43"},{"size":2741,"mtime":1689233799877,"results":"57","hashOfConfig":"43"},{"size":1584,"mtime":1689233799876,"results":"58","hashOfConfig":"43"},{"size":3093,"mtime":1689233799881,"results":"59","hashOfConfig":"43"},{"size":2268,"mtime":1689233799882,"results":"60","hashOfConfig":"43"},{"size":5198,"mtime":1689233799882,"results":"61","hashOfConfig":"43"},{"size":3591,"mtime":1689233799881,"results":"62","hashOfConfig":"43"},{"size":726,"mtime":1689233799881,"results":"63","hashOfConfig":"43"},{"size":2862,"mtime":1689233799883,"results":"64","hashOfConfig":"43"},{"size":11371,"mtime":1689233799869,"results":"65","hashOfConfig":"43"},{"size":2247,"mtime":1689233799869,"results":"66","hashOfConfig":"43"},{"size":2860,"mtime":1689790596777,"results":"67","hashOfConfig":"43"},{"size":6881,"mtime":1689233799868,"results":"68","hashOfConfig":"43"},{"size":2090,"mtime":1689233799872,"results":"69","hashOfConfig":"43"},{"size":1997,"mtime":1689233799871,"results":"70","hashOfConfig":"43"},{"size":5969,"mtime":1689233799868,"results":"71","hashOfConfig":"43"},{"size":3439,"mtime":1689790775215,"results":"72","hashOfConfig":"43"},{"size":2523,"mtime":1689233799869,"results":"73","hashOfConfig":"43"},{"size":5784,"mtime":1689233799870,"results":"74","hashOfConfig":"43"},{"size":4996,"mtime":1689233799870,"results":"75","hashOfConfig":"43"},{"size":3979,"mtime":1689790628062,"results":"76","hashOfConfig":"43"},{"size":5172,"mtime":1689835139084,"results":"77","hashOfConfig":"43"},{"size":1839,"mtime":1689233799879,"results":"78","hashOfConfig":"43"},{"size":1189,"mtime":1689233799873,"results":"79","hashOfConfig":"43"},{"size":1704,"mtime":1689233799873,"results":"80","hashOfConfig":"43"},{"size":1151,"mtime":1689233799872,"results":"81","hashOfConfig":"43"},{"size":1653,"mtime":1689233799873,"results":"82","hashOfConfig":"43"},{"size":430,"mtime":1689233799856,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"8lzu4u",{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147"},{"filePath":"148","messages":"149","suppressedMessages":"150","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159"},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178"},{"filePath":"179","messages":"180","suppressedMessages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"189","messages":"190","suppressedMessages":"191","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","suppressedMessages":"194","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\index.js",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\App.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\app\\store.js",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Search.page.jsx",["221","222"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useParams ,useNavigate } from \"react-router-dom\";\r\nimport { AllQuestions, Nav, QuestionNAnswers } from \"../components\";\r\nimport styled from \"styled-components\";\r\nimport { search } from \"../features/asyncThunks/queries.thunk\";\r\nimport { recommended_Questions } from \"../features/asyncThunks/questions.thunk\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Search = () => {\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [questionsData, setQuestionsData] = useState([]);\r\n\r\n  const { question } = useParams();\r\n  const navigate = useNavigate();\r\nconst dispatch=useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"questify-log-isauth-T\")) {\r\n      navigate(\"/login\");\r\n    }\r\n    async function fetchData() {\r\n      const pgData = await dispatch(search({  search:question }));\r\n      setSearchData(pgData.payload.questions);\r\n      const newData = await dispatch(recommended_Questions({question }));\r\n      setQuestionsData(newData.payload);\r\n    }\r\n    fetchData();\r\n  }, [,question]);\r\n\r\n  return (\r\n    <Component>\r\n      <div>\r\n        <Nav />\r\n        <div className=\"home-container\">\r\n          <main className=\"home-main-container\">\r\n            <section className=\"home-quest-continer\">\r\n              <div className=\"search-result-container\">\r\n                <h3> search results for &#x2022; </h3>{\" \"}\r\n                <p>\r\n                  <i>{question}</i>\r\n                </p>\r\n              </div>\r\n              <div className=\"home-quest-scroll\">\r\n                {\r\n                    searchData?.length ?\r\n                    searchData.map(search=>{\r\n                        return <QuestionNAnswers key={search.id} quest={search} />\r\n                    }):\"\"\r\n                }\r\n\r\n              </div>\r\n            </section>\r\n            <section>\r\n                <AllQuestions data={questionsData} title={\"Search Related Questions\"}/>\r\n            </section>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    </Component>\r\n  );\r\n};\r\n\r\nvar Component = styled.div`\r\n  .search-result-container {\r\n    width: 100%;\r\n    background-color: #fff;\r\n    padding: 10px;\r\n    display: grid;\r\n    grid-template-columns: 22% 78%;\r\n\r\n    h3 {\r\n      font-weight: 600;\r\n    }\r\n\r\n    p {\r\n      width: 100%;\r\n      margin-left: 5px;\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      overflow-wrap: break-word;\r\n      word-wrap: break-word;\r\n      hyphens: auto;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Search;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\user\\userSlice.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\answers\\answersSlice.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\queries\\queriesSlice.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\questionNanswerPageHandler\\QNAPageSlice.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\questions\\questionsSlice.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\index.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\index.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\asyncThunks\\questions.thunk.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\asyncThunks\\queries.thunk.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Home.page.jsx",["223"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Loading,NoData } from \"../assets\";\r\n\r\nimport {\r\n  Nav,\r\n  AllQuestions,\r\n  UserInputBox,\r\n  QuestionNAnswers,\r\n} from \"../components\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport useFetchHomeData from \"../hooks/useFetchHomeData.hooks\";\r\n\r\nconst Home = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n\r\n  const navigate = useNavigate();\r\n  const { questionAdded, answerAdded } = useSelector((state) => ({\r\n    questionAdded: state.qNaPage.questionAdded,\r\n    answerAdded: state.qNaPage.answerAdded,\r\n  }));\r\n\r\n  const {isloading,hasmore,pageData,questionsData} = useFetchHomeData({questionAdded,answerAdded,pageNum})\r\n\r\n  const handleInfiniteScrol=async (e)=>{\r\n    if(Number(document.querySelector('.home-quest-continer').scrollTop)+719>=document.querySelector('.home-quest-continer').scrollHeight){\r\n      if(hasmore)\r\n        setPageNum(prev=>prev+1);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"questify-log-isauth-T\")) {\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <div className=\"home-container\">\r\n        <main className=\"home-main-container\">\r\n          <section className=\"home-quest-continer\" onScrollCapture={handleInfiniteScrol} >\r\n            <UserInputBox />\r\n            <div className=\"home-quest-scroll\" >\r\n            {isloading && <p><div className=\"no-data\">\r\n                  <Loading/>\r\n                </div></p>}\r\n              {(!isloading && pageData?.length)\r\n                ? pageData.map((quest,index) => {\r\n                    return <div key={quest.id} ><QuestionNAnswers quest={quest} /></div>;\r\n                  }):\"\"}\r\n            {!isloading && !pageData?.length &&<div className=\"no-data\">\r\n                  <h2>No Data</h2>\r\n                  <NoData/>\r\n                </div> }\r\n            </div>\r\n          </section>\r\n          <section>\r\n          {isloading && <p><div className=\"no-data\">\r\n                  <Loading/>\r\n                </div></p>}\r\n            {(!isloading && questionsData?.length )? <AllQuestions data={questionsData} title={\"All Questions\"} />:\"\" }\r\n          </section>\r\n        </main>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\asyncThunks\\user.thunk.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\features\\asyncThunks\\answers.thunk.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Login.page.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Questions.page.jsx",["224","225"],[],"import React, { useEffect, useState } from 'react'\r\n\r\nimport {AutherWriteBox, Nav} from \"../components\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Loading, NoData } from '../assets'\r\nimport useFetchHomeData from '../hooks/useFetchHomeData.hooks'\r\n\r\n  const cssW={\r\n    bgColor:\"white\",\r\n    itemBg:\"#d9d9d9\",\r\n    isAns:true,\r\n    isHeader:true,\r\n    isFollowers:true,\r\n    viewAns:true,\r\n  }\r\n\r\nconst Questions = () => {\r\n  const [pageNum, setPageNum] = useState(1);\r\n\r\n  const navigate=useNavigate();\r\n  const dispatch= useDispatch();\r\n\r\n  const { questionAdded, answerAdded } = useSelector((state) => ({\r\n    questionAdded: state.qNaPage.questionAdded,\r\n    answerAdded: state.qNaPage.answerAdded,\r\n  }));\r\n  \r\n  const {isloading:loading,hasmore,pageData} = useFetchHomeData({questionAdded,answerAdded,pageNum})\r\n\r\n  const handleInfiniteScrol=async (e)=>{\r\n    if(Number(document.querySelector('.home-quest-continer').scrollTop)+719>=document.querySelector('.home-quest-continer').scrollHeight){\r\n      if(hasmore)\r\n        setPageNum(prev=>prev+1);\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(!localStorage.getItem(\"questify-log-isauth-T\")){\r\n      navigate(\"/login\")\r\n    }\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <main className=\"questions-main-container\">\r\n        <section className='home-quest-continer' onScrollCapture={handleInfiniteScrol} >\r\n          {loading &&<p style={{width:\"55vw\"}} ><div className=\"no-data\">\r\n                  <Loading/>\r\n                </div></p>}\r\n          {(!loading && pageData.length) ?\r\n          pageData.map(quest=>{\r\n            return <div className=\"question-box\" key={quest.id} >\r\n             <AutherWriteBox styles={cssW} id={quest.id} statement={quest.question} user={quest.user} isupvoted={quest.isupvoted} upvotes={quest.upvotes} downvotes={quest.downvotes} isdownvoted={quest.isdownvoted} date={quest.date}  />\r\n            </div>\r\n          }):''}\r\n          {(!loading && !pageData.length) && <p style={{width:\"55vw\"}}><div className=\"no-data\">\r\n                  <h2>No Data</h2>\r\n                  <NoData/>\r\n                </div></p>}\r\n        </section>\r\n      </main>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\nexport default Questions","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Register.page.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Question.page.jsx",["226","227"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport { AllQuestions, AutherWriteBox, Nav } from \"../components\";\r\nimport { useNavigate , useParams } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { query } from \"../features/asyncThunks/queries.thunk\"\r\nimport { recommended_Questions } from \"../features/asyncThunks/questions.thunk\";\r\nimport { Loading, NoData } from \"../assets\";\r\n\r\nconst cssW = {\r\n  bgColor: \"white\",\r\n  itemBg: \"#d9d9d9\",\r\n  isAns: true,\r\n  isHeader: true,\r\n  isFollowers: true,\r\n};\r\n\r\nconst cssD = {\r\n  bgColor: \"#EAEAEA\",\r\n  itemBg: \"white\",\r\n  isAns: false,\r\n  isHeader: false,\r\n};\r\n\r\n\r\nconst Question = () => {\r\n  const [data, setData] = useState({})\r\n  const [recommendedQuests,setRecommendedQuests] = useState([]);\r\n  const [loading,setLoading] = useState(false);\r\n  const {question_id} = useParams();\r\n\r\n  const navigate = useNavigate()\r\n  const dispatch = useDispatch()\r\n  const answerAdded  = useSelector((state) =>state.qNaPage.answerAdded);\r\n\r\n  useEffect(()=>{\r\n    if(!localStorage.getItem(\"questify-log-isauth-T\")){\r\n      navigate(\"/login\")\r\n    }\r\n    async function fetchData(){\r\n      setLoading(true);\r\n      const res=await dispatch(query({question_id}))\r\n      setData(res.payload.question)\r\n      const questsData = await dispatch(recommended_Questions({question:res.payload.question.question}));\r\n      setRecommendedQuests(questsData.payload)\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n\r\n  },[question_id])\r\n\r\n  useEffect(()=>{\r\n    async function fetchData(){\r\n      const res=await dispatch(query({question_id}))\r\n      setData(res.payload.question)\r\n    }\r\n    fetchData();\r\n  },[answerAdded])\r\n\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <main className=\"question-main-container\">\r\n        <section>\r\n          {(!loading && data?.question )? <div className=\"question-box\">\r\n            <AutherWriteBox styles={cssW} id={data.id} statement={data.question} user={data.user} isupvoted={data.isupvoted} upvotes={data.upvotes} isdownvoted={data.isdownvoted} downvotes={data.downvotes} date={data.date}  />\r\n          </div>:\"\" }\r\n          {(!loading && data?.answer) ?\r\n          <div className=\"answer-holder\">\r\n            <hr className=\"answer-hr\" />\r\n            <div className=\"answers-container\">\r\n              {\r\n                data.answer.map(ans=>{\r\n                  return <div className=\"answer\" key={ans.id}>\r\n                    <AutherWriteBox styles={cssD} id={ans.id} statement={ans.answer} user={ans.user} isupvoted={ans.isupvoted} upvotes={ans.upvotes} downvotes={ans.downvotes} isdownvoted={ans.isdownvoted} date={ans.date}   />  \r\n                  </div>\r\n                })\r\n              }\r\n            </div>\r\n          </div>:\"\"}\r\n          {(loading) && <div style={{width:\"55vw\"}} ><div className=\"no-data\">\r\n                  <Loading/>\r\n                </div></div>}\r\n          {(!loading && !data?.question )?<div className=\"no-data\">\r\n          <div style={{width:\"55vw\"}} >\r\n                  <NoData/>\r\n          </div>      </div>:\"\"}\r\n        </section>\r\n        <section>\r\n        {(loading) && <div><div className=\"no-data\">\r\n                  <Loading/>\r\n                </div></div>}\r\n          {(!loading && !data?.question )?<div ><div className=\"no-data\">\r\n                  <NoData/>\r\n                </div></div>:\"\"}\r\n        { (!loading && recommendedQuests?.length )? <AllQuestions data={recommendedQuests} title={\"Recommended Questions\"} /> :\"\" }\r\n        </section>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Question;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\Profile.page.jsx",["228"],[],"import React, { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { Nav,UserProfileDetails,UserProfileBody } from \"../components\";\r\n\r\nconst Profile = () => {\r\n\r\n  const navigate = useNavigate()\r\n  \r\n  useEffect(()=>{\r\n    if(!localStorage.getItem(\"questify-log-isauth-T\")){\r\n      navigate(\"/login\")\r\n    }\r\n  },[])\r\n  return (\r\n    <div>\r\n      <Nav />\r\n      <div className=\"user-profile-container\">\r\n        <div className=\"user-profile-outer-container\">\r\n          <section>\r\n            <UserProfileDetails/>\r\n          </section>\r\n          <section>\r\n            <UserProfileBody/>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\pages\\SelectAvatar.page.jsx",["229","230"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { Buffer } from \"buffer/\";\r\nimport axios from \"axios\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { avatarThunk } from \"../features/asyncThunks/user.thunk\"\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst SelectAvatar = () => {\r\n  const [avatars, setAvatars] = useState([]);\r\n  const [selected, setSelected] = useState(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"questify-log-isauth-T\")) {\r\n      navigate(\"/login\");\r\n    }\r\n\r\n    const data = [];\r\n    let image, buffer;\r\n    async function fetchData() {\r\n      for (let i = 0; i < 14; i++) {\r\n        image = await axios(\r\n          `https://avatars.dicebear.com/api/adventurer/${Math.floor(\r\n            Math.random() * 1000\r\n          )}.svg`\r\n        );\r\n        buffer = await new Buffer(image.data);\r\n        data.push(buffer.toString(\"base64\"));\r\n      }\r\n      setAvatars(data);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleSetAavatar=async ()=>{\r\n    const res = await dispatch(avatarThunk({avatar:`data:image/svg+xml;base64,${selected}`}))\r\n    if(res.payload?.success){\r\n      navigate(\"/\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <div\r\n        className=\"login-form-container\"\r\n        style={{ height: \"65%\", width: \"60%\" }}\r\n      >\r\n        <h1>Questify</h1>\r\n        <hr />\r\n        <div className=\"select-avatar-container\">\r\n          <div className=\"select-avatar-header\">\r\n            <h3>Select Your Avatar</h3>\r\n          </div>\r\n          <div className=\"avatars-container\">\r\n            {avatars.length\r\n              ? avatars.map((img) => {\r\n                  return (\r\n                    <div\r\n                      className={`avatar ${\r\n                        selected === img ? \"active-avatar\" : \"\"\r\n                      }`}\r\n                      key={uuid()}\r\n                      onClick={() => {\r\n                        setSelected(img);\r\n                      }}\r\n                    >\r\n                      <img\r\n                        alt=\"avatar\"\r\n                        src={`data:image/svg+xml;base64,${img}`}\r\n                        // src={faker.image.avatar()}\r\n                        alt=\"avatar\"\r\n                        width=\"100%\"\r\n                        height=\"100%\"\r\n                        // onClick={() => setSelectedAvatar(index)}\r\n                      />\r\n                    </div>\r\n                  );\r\n                })\r\n              : \"Please wait loading...\"}\r\n          </div>\r\n          <div className=\"selected-button\">\r\n            <button onClick={handleSetAavatar} >Register</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SelectAvatar;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\AutherWriteBox.component.jsx",["231"],[],"import React, { useEffect, useState } from \"react\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport ArrowUpwardIcon from \"@mui/icons-material/ArrowUpward\";\r\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\";\r\nimport ChatBubbleIcon from \"@mui/icons-material/ChatBubble\";\r\nimport PeopleIcon from \"@mui/icons-material/People\";\r\nimport ReadMoreIcon from '@mui/icons-material/ReadMore';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport styled from \"styled-components\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { handleAnswerPage } from \"../features/questionNanswerPageHandler/QNAPageSlice\";\r\nimport {upvote_Question,downvote_Question} from \"../features/asyncThunks/questions.thunk\"\r\nimport {upvote_Answer,downvote_Answer} from \"../features/asyncThunks/answers.thunk\"\r\nimport {followThunk} from \"../features/asyncThunks/user.thunk\"\r\n\r\nconst AutherWriteBox = ({ styles,id,user,statement,upvotes,isupvoted,downvotes,isdownvoted,date }) => {\r\n  const [isHover, setIsHover] = useState(false);\r\n  const [upvoted,setUpvoted] = useState(isupvoted);\r\n  const [downvoted,setDownvoted] = useState(isdownvoted);\r\n  const [isFollowing, setIsFollowing] = useState(user.isfollowing);\r\n\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const handleAddAns=()=>{\r\n    dispatch(handleAnswerPage({click:true,questionID:id,question:statement}));\r\n  }\r\n\r\n  const handleUpvoteClick=async ()=>{\r\n    if(styles.isAns){\r\n      const res=await dispatch(upvote_Question({question_id:id}))\r\n      if(res.payload.upvoted){\r\n        setUpvoted(true);\r\n        if(downvoted ){\r\n          setDownvoted(false);\r\n        }\r\n      }else{\r\n        setUpvoted(false);\r\n      }\r\n    }else{\r\n      const res=await dispatch(upvote_Answer({answer_id:id}))\r\n      setUpvoted(res.payload.upvoted)\r\n      if(res.payload.upvoted && downvoted ){\r\n        setDownvoted(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleDownvoteClick=async (e)=>{\r\n    e.preventDefault();\r\n    if(styles.isAns){\r\n      const res=await dispatch(downvote_Question({question_id:id}))\r\n      setDownvoted(res.payload.downvoted)\r\n      if(res.payload.downvoted && upvoted ){\r\n        setUpvoted(false);\r\n      }\r\n    }else{\r\n      const res=await dispatch(downvote_Answer({answer_id:id}))\r\n      setDownvoted(res.payload.downvoted)\r\n      if(res.payload.downvoted && upvoted ){\r\n        setUpvoted(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleFollow = async () =>{\r\n    const res=await dispatch(followThunk({user:user.id})) \r\n    setIsFollowing(res.payload.isfollowing)\r\n  }\r\n\r\n  return (\r\n    <Component>\r\n      <div style={{ backgroundColor: styles.bgColor }}>\r\n        <div className=\"user-details-container\">\r\n          <div className=\"user-details\">\r\n            <div\r\n              className=\"user-avatar\"\r\n              style={{ backgroundColor: styles.itemBg }}\r\n            >\r\n              {user.avatar ?<img src={user.avatar} alt=\"avatar\" width={\"100%\"} height=\"100%\" /> :<PersonIcon />}\r\n            </div>\r\n            <div className=\"user-prop-details\">\r\n              <h3>{user.firstname+\" \"+user.lastname}</h3>\r\n              <p>{user.profession}</p>\r\n            </div>\r\n          </div>\r\n          <div className=\"user-followers\">\r\n            {styles.isFollowers ? (\r\n              isFollowing ? <button onClick={handleFollow} >Following</button> :\r\n              <button onClick={handleFollow} >Followers &#x2022; {user.followers}</button>\r\n            ) : (\r\n              isFollowing ? <button\r\n                className=\"user-dark-followers\"\r\n                style={{\r\n                  background: isHover ? \"#000\" : \"rgb(0,0,0,0.8)\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  width: \"80%\"\r\n                }}\r\n                onMouseEnter={()=>setIsHover(true)}\r\n                onMouseLeave={()=>setIsHover(false)}\r\n                onClick={handleFollow} \r\n              >\r\n                <PeopleIcon /> &#x2022; <CheckIcon/>\r\n              </button> : \r\n              <button\r\n                className=\"user-dark-followers\"\r\n                style={{\r\n                  background: isHover ? \"#000\" : \"rgb(0,0,0,0.8)\",\r\n                  display: \"flex\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  width: \"80%\"\r\n                }}\r\n                onMouseEnter={()=>setIsHover(true)}\r\n                onMouseLeave={()=>setIsHover(false)}\r\n                onClick={handleFollow} \r\n              >\r\n                <PeopleIcon /> &#x2022; {user.followers}\r\n              </button>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"user-post-details\">\r\n          <div className=\"user-post-posted-date\">\r\n            <p>posted on {Date(date).toString().slice(4,15)} </p>\r\n          </div>\r\n          <div className=\"auther-writing\">\r\n            {styles.isHeader ? (\r\n              <h3>\r\n                {statement}\r\n              </h3>\r\n            ) : (\r\n              <h4 style={{ fontWeight: \"500\", fontSize: \"1rem\" }}>\r\n                {statement}\r\n              </h4>\r\n            )}\r\n          </div> \r\n        </div>\r\n        <div className=\"post-response-details\">\r\n          <div\r\n            className=\"post-votes-container\"\r\n            style={{ backgroundColor: styles.itemBg }}\r\n          >\r\n          {upvoted?\r\n            <div className=\"post-upvotes post-hover\" onClick={handleUpvoteClick} style={{backgroundColor:\" #00ff57\",borderTopLeftRadius:\"20px\",borderBottomLeftRadius:\"20px\"}}>\r\n              <ArrowUpwardIcon sx={{margin:\"0px 5px\"}} />\r\n               <p>upvoted</p>\r\n            </div>\r\n          :\r\n            <div className=\"post-upvotes post-hover\" onClick={handleUpvoteClick} >\r\n              <ArrowUpwardIcon sx={{margin:\"0px 5px\"}} />\r\n              <p>upvotes &#x2022; {upvotes}</p>\r\n            </div>\r\n            \r\n            }\r\n            <hr />\r\n            {downvoted ?\r\n            <div className=\"post-downvotes post-hover\" onClick={handleDownvoteClick} style={{backgroundColor:\" #ff4242\",borderTopRightRadius:\"20px\",borderBottomRightRadius:\"20px\"}}>\r\n              <ArrowDownwardIcon sx={{margin:\"0px 5px\"}} />\r\n               <p>downvoted</p>\r\n            </div>:\r\n            <div className=\"post-downvotes post-hover\" onClick={handleDownvoteClick} >\r\n              <ArrowDownwardIcon sx={{margin:\"0px 5px\"}} />\r\n              <p>downvotes &#x2022; {downvotes}</p>\r\n            </div>\r\n            }\r\n          </div>\r\n          {styles.isAns ? (\r\n            <div className=\"users-ans-on-post post-hover\" onClick={handleAddAns} >\r\n              <ChatBubbleIcon />\r\n              <p>Add answer</p>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {styles.viewAns?(\r\n            <div className=\"view-answers post-hover\" onClick={()=>navigate(`/question/${id}`)}>\r\n              <ReadMoreIcon sx={{margin:\"0px 5px\"}} />\r\n              <p>view responses</p>\r\n            </div>\r\n          ):\"\"}\r\n        </div>\r\n      </div>\r\n    </Component>\r\n  );\r\n};\r\n\r\nvar Component = styled.div`\r\n  div {\r\n    width: 100%;\r\n\r\n    .user-details-container {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: Center;\r\n      justify-content: space-between;\r\n\r\n      .user-details {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n\r\n        .user-avatar {\r\n          display: grid;\r\n          place-items: center;\r\n          width: 65px;\r\n          height: 55px;\r\n          background-color: #d9d9d9;\r\n          border-radius: 50%;\r\n          margin: 5px 10px;\r\n\r\n          * {\r\n            font-size: 1.7rem;\r\n          }\r\n        }\r\n\r\n        .user-prop-details {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: flex-start;\r\n          width: auto;\r\n          h3 {\r\n            font-size: 16px;\r\n          }\r\n          p {\r\n            font-size: 12px;\r\n          }\r\n        }\r\n      }\r\n\r\n      .user-followers {\r\n        width: 150px;\r\n        height: 1.6rem;\r\n        margin: 15px;\r\n        ${\"\" /* background-color:blue; */}\r\n\r\n        button {\r\n          width: 100%;\r\n          height: 100%;\r\n          border: none;\r\n          border-radius: 5px;\r\n          background-color: #ff0000;\r\n          color: white;\r\n        }\r\n\r\n        button:hover {\r\n          background-color: #b50000;\r\n          color: white;\r\n          cursor: pointer;\r\n        }\r\n\r\n      }\r\n    }\r\n    .user-post-details {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin: 5px 15px;\r\n      width: auto;\r\n\r\n      .user-post-posted-date {\r\n        width: auto;\r\n        font-size: 10px;\r\n        align-self: baseline;\r\n        ${'' /* margin-left:10px; */}\r\n      }\r\n\r\n      .auther-writing {\r\n        width: 95%;\r\n        font-size: 16px;\r\n        margin: 3px 0px;\r\n      }\r\n    }\r\n\r\n    .post-response-details {\r\n      display: flex;\r\n      flex-direction: row;\r\n      align-items: center;\r\n      margin-top: 5px;\r\n      width: 95%;\r\n\r\n      .post-votes-container {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        margin: 5px 8px;\r\n        background-color: #e0e0e0;\r\n        border-radius: 15px;\r\n        width: 55%;\r\n        height: 2rem;\r\n        * {\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n\r\n        p {\r\n          font-size: 15px;\r\n        }\r\n        .post-hover {\r\n          flex-direction: row;\r\n        }\r\n      }\r\n\r\n      .users-ans-on-post {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        padding: 0px 5px;\r\n        margin-left: 5px;\r\n        width: 25%;\r\n        background-color: transparent;\r\n\r\n        * {\r\n          display: flex;\r\n          align-items: center;\r\n          margin: 3px 5px;\r\n        }\r\n\r\n        p {\r\n          font-size: 15px;\r\n        }\r\n      }\r\n\r\n      .post-upvotes,\r\n      .post-downvotes {\r\n        background: transparent;\r\n        padding: 3px 5px;\r\n        border:none;\r\n      }\r\n\r\n      .post-upvotes:hover {\r\n        background-color: #00ff57;\r\n        color: white;\r\n        border-top-left-radius: 15px;\r\n        border-bottom-left-radius: 15px;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .post-downvotes:hover {\r\n        color: white;\r\n        background-color: #ff4242;\r\n        border-top-right-radius: 15px;\r\n        border-bottom-right-radius: 15px;\r\n        cursor: pointer;\r\n      }\r\n\r\n      hr {\r\n        width: 2px;\r\n        height: 1.7rem;\r\n        border: none;\r\n        background-color: #888888;\r\n      }\r\n\r\n      .users-ans-on-post:hover {\r\n        background: linear-gradient(\r\n          to right,\r\n          #24ff00,\r\n          #19ffe3,\r\n          #fa00ff,\r\n          #ff0016\r\n        );\r\n        color: white;\r\n        border-radius: 15px;\r\n        cursor: pointer;\r\n        height: 2rem;\r\n      }\r\n\r\n      .view-answers{\r\n        width:30%;\r\n        margin-left:5px;\r\n        display:flex;\r\n        flex-direction:row;\r\n        align-items:center;\r\n      }\r\n\r\n      .view-answers:hover{\r\n        border-bottom:2px solid blue;\r\n        color: blue;\r\n        cursor: pointer;\r\n        height: 2rem;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AutherWriteBox;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\AllQuestions.component.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\Nav.component.jsx",["232"],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\AddQuestion.component.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileBody.component.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\QuestionNAnswers.component.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\AddAnswer.component.jsx",["233"],[],"import React, { useEffect, useState } from \"react\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport styled from \"styled-components\";\r\nimport { TextField } from \"@mui/material\";\r\nimport { useDispatch , useSelector } from \"react-redux\";\r\nimport { handleAnswerAdded, handleAnswerPage } from \"../features/questionNanswerPageHandler/QNAPageSlice\";\r\nimport { add_Answer } from \"../features/asyncThunks/answers.thunk\"\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { getUserDataThunk } from \"../features/asyncThunks/user.thunk\"\r\n\r\nconst AddAnswer = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [userData,setUserData] = useState(null)\r\n\r\n  const dispatch=useDispatch();\r\n  const avatar = useSelector(state=>state.user.avatar);\r\n  const {  questionID ,question  } = useSelector(state=>state.qNaPage.answerPage)\r\n  const handleCrossBtn=(e)=>{\r\n    e.preventDefault();\r\n    dispatch(handleAnswerPage({click:false,questionID:\"\"}));\r\n  }\r\n\r\n  useEffect(()=>{\r\n    async function fetchData(){\r\n      const res = await dispatch(getUserDataThunk());\r\n      setUserData(res.payload)\r\n    }\r\n    fetchData()\r\n  },[questionID])\r\n\r\n  const handleSubmit=async (e)=>{\r\n    e.preventDefault();\r\n    await dispatch(handleAnswerPage(true));\r\n    await dispatch(add_Answer({question_id:questionID,answer:input}));\r\n    const uid = await uuid();\r\n    await dispatch(handleAnswerAdded(uid));\r\n    dispatch(handleAnswerPage({click:false,questionID:\"\"}));\r\n  }\r\n\r\n  return (\r\n    <Component>\r\n      <section className=\"section\">\r\n        <div className=\"outer-box\">\r\n          <div className=\"inner-box\">\r\n            <div className=\"seperator\">\r\n            <div className=\"cross-button\">\r\n              <CloseIcon sx={{cursor:\"pointer\"}} onClick={handleCrossBtn} />\r\n            </div>\r\n            <div className=\"answer-box-header\">\r\n              <h3 className=\"answer-box-header-title\">Add Answer</h3>\r\n              <hr />\r\n            </div>\r\n            <div className=\"user-details\">\r\n              <div className=\"user-avatar\">\r\n                {avatar? <img src={avatar} alt=\"avatar\" width={\"100%\"} height=\"100%\" /> :<PersonIcon />}\r\n              </div>\r\n              <div className=\"user-props\">\r\n                <h4>{!userData?\"Loading...\":userData.username}</h4>\r\n                <p>{!userData?\"Loading...\":userData.profession}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"question\">\r\n              <h3>{question}</h3>\r\n            </div>\r\n            <div className=\"answer-input\">\r\n              <TextField\r\n                id=\"standard-multiline-flexible\"\r\n                label=\"\"\r\n                multiline\r\n                fullWidth \r\n                maxRows={12}\r\n                variant=\"standard\"\r\n                placeholder=\"write your answer...\"\r\n                value={input}\r\n                onChange={(e)=>setInput(e.target.value)}\r\n                onKeyDown={(e)=>{\r\n                  if(e.key===\"Enter\"){\r\n                    handleSubmit(e);\r\n                  }\r\n                }}\r\n              />\r\n            </div>\r\n            </div>\r\n            <div className=\"buttons\">\r\n                <button className=\"clear\" style={{cursor:\"pointer\"}} onClick={handleCrossBtn}  >Cancel</button>\r\n                <button className=\"add-answer\" onClick={handleSubmit} disabled={input.length===0} style={{backgroundColor:input.length?\"rgb(0,71,255)\":\"rgb(0,71,255,54%)\",cursor:input.length?\"pointer\":\"auto\"}} >Add Answer</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Component>\r\n  );\r\n};\r\n\r\nvar Component = styled.section`\r\n  section {\r\n    .outer-box {\r\n    width:100%;\r\n    height:100%;\r\n      display: grid;\r\n      place-items: center;\r\n\r\n      .inner-box {\r\n        background-color: #fff;\r\n        margin:7rem;\r\n        width: 50%;\r\n        height: 60vh;\r\n        border-radius:20px;\r\n        display:flex;\r\n        flex-direction:column;  \r\n        justify-content:space-between;\r\n\r\n        .cross-button{\r\n            margin:15px;\r\n        }\r\n\r\n        .answer-box-header{\r\n            display:grid;\r\n            place-items:center;\r\n            \r\n            h3{\r\n                margin:5px;\r\n            }\r\n\r\n            hr{\r\n                width:95%;\r\n                height:2px;\r\n                border:none;\r\n                background-color:#0066FF;\r\n            }\r\n        }\r\n\r\n        .user-details{\r\n            display:flex;\r\n            align-items:center;\r\n            margin:20px;\r\n\r\n            .user-avatar{\r\n                width:55px;\r\n                height:50px;\r\n                border-radius:50%;\r\n                background-color: #D9D9D9;\r\n                display:grid;\r\n                place-items:center;\r\n                margin : 0px 10px;\r\n            }\r\n\r\n            .user-props{\r\n\r\n                h4{\r\n                    font-size:1rem;\r\n                }\r\n\r\n                p{\r\n                    font-size:10px;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        .question{\r\n            h3{\r\n                margin:0px 35px;    \r\n\r\n            }\r\n\r\n        }\r\n\r\n        .answer-input{\r\n            width:90%;\r\n            margin:10px 35px;\r\n            \r\n        }\r\n      }\r\n\r\n      .buttons{\r\n        display:flex;\r\n        width:95%;\r\n        align-items:center;\r\n        justify-content:flex-end;\r\n        margin:15px;\r\n            button{\r\n                margin:0px 5px;\r\n                height:2rem;\r\n                width:90px;\r\n                cursor:pointer;\r\n            }\r\n\r\n            .clear{\r\n                border:none;\r\n                background:transparent;\r\n            }\r\n\r\n            .add-answer{\r\n                border:none;\r\n                background-color:rgb(0,71,255,54%);\r\n                border-radius:20px;\r\n                width:100px;\r\n                color:white;\r\n            }\r\n\r\n      }\r\n\r\n    }\r\n`;\r\n\r\nexport default AddAnswer;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileDetails.component.jsx",["234","235"],[],"import React, { useEffect, useState } from \"react\";\r\nimport PersonIcon from \"@mui/icons-material/Person\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector , useDispatch } from \"react-redux\";\r\nimport {getUserDataThunk} from \"../features/asyncThunks/user.thunk\"\r\n\r\nconst UserProfileDetails = () => {\r\n  const [userData, setUserData] = useState(null)\r\n\r\n  const dispatch = useDispatch();\r\n  const avatar = localStorage.getItem(\"avatar\")\r\n\r\n  useEffect(()=>{ \r\n    async function fetchData(){\r\n      const res = await dispatch(getUserDataThunk());\r\n      setUserData(res.payload)\r\n    }\r\n    fetchData();\r\n  },[])\r\n\r\n  return (\r\n    <Component>\r\n      <div className=\"user-profile-info\">\r\n        <div className=\"user-profile-avatar\">\r\n          {avatar? <img src={avatar} alt=\"avatar\" width={\"100%\"} height=\"100%\" /> :<PersonIcon />}\r\n        </div>\r\n        <div className=\"user-profile-details\">\r\n          <div className=\"user-name\">\r\n            <h2>{userData?userData.username :\"Loading...\"}</h2>\r\n          </div>\r\n          <div className=\"user-profession\">\r\n            <p>{userData?userData.profession :\"Loading...\"}</p>\r\n            <p style={{color:\"blue\",fontWeight:\"600\"}} >\r\n              <i>{userData?userData.email :\"Loading...\"}</i>\r\n            </p>\r\n          </div>\r\n          <div className=\"user-follow-container\">\r\n            <div className=\"user-followers\">\r\n              {userData?<p>Followers &#x2022; {userData.followers}</p>:<p>Loading...</p>}\r\n            </div>\r\n            <div className=\"user-followings\">\r\n              {userData?<p>Following &#x2022; {userData.following}</p>:<p>Loading...</p>}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Component>\r\n  );\r\n};\r\n\r\nvar Component = styled.div`\r\n  .user-profile-info {\r\n    width:80%;\r\n    margin: 20px;\r\n    margin-left:60px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .user-profile-avatar {\r\n      width: 90px;\r\n      height: 80px;\r\n      border-radius: 50%;\r\n      background-color: #D9D9D9;\r\n      display: grid;\r\n      place-items: center;\r\n\r\n      * {\r\n        font-size: 2.5rem;\r\n      }\r\n    }\r\n\r\n    .user-profile-details {\r\n      width: 80%;\r\n      margin: 0px 20px;\r\n\r\n      .user-name {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: end;\r\n        p {\r\n          font-size: 12px;\r\n          margin:0px 5px;\r\n          color:blue;\r\n        }\r\n      }\r\n\r\n      .user-name h2 {\r\n        font-size: 20px;\r\n        font-weight:900;\r\n      }\r\n\r\n      .user-profession p {\r\n        font-size: 12px;\r\n        font-weight: 700;\r\n      }\r\n      .user-follow-container {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n        margin-top:7px;\r\n        width:50%;\r\n\r\n        .user-followers{\r\n            display:grid;\r\n            place-items:center;\r\n            background-color:#FF0000;\r\n            color:white;            \r\n            width:50%;\r\n            height:1.5rem;   \r\n            padding:0px 10px;\r\n            border-radius:5px;\r\n        }\r\n\r\n        .user-followings{\r\n            display:grid;\r\n            color:White;\r\n            margin-left:10px;\r\n            place-items:center;\r\n            background-color:#FF0000;\r\n            width:50%;\r\n            height:1.5rem;   \r\n            padding:0px 10px;\r\n            border-radius:5px;\r\n        }\r\n\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default UserProfileDetails;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\Follow.component.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\MyAnswers.component.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\MyQuestions.component.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserInputBox.component.jsx",["236"],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\config\\routes.config.jsx",[],[],"C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\hooks\\useFetchHomeData.hooks.jsx",["237"],[],"import { useState,useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { allQuestions } from '../features/asyncThunks/questions.thunk';\r\nimport { pageQuery } from '../features/asyncThunks/queries.thunk';\r\n\r\nconst useFetchHomeData = ({pageNum,questionAdded,answerAdded}) => {\r\n    const [pageData, setPageData] = useState([]);\r\n    const [totalPageData, setTotalPageData] = useState(0);\r\n    const [questionsData, setQuestionsData] = useState([]);\r\n    const [isloading, setIsloading] = useState(true);\r\n    const [hasmore,setHasmore] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const dispatch=useDispatch()\r\n\r\n    useEffect(()=>{\r\n        setIsloading(true);\r\n        async function fetchData() {\r\n          const pgData = await dispatch(pageQuery({ page: pageNum, limit: 10 }));\r\n          setIsloading(false);\r\n          if((!pgData.payload?.error) && pgData.payload?.questions?.length ){\r\n            setPageData(prevData => {\r\n              const uniqueQuestions = pgData.payload.questions.filter(q => !prevData.some(pq => pq._id === q._id));\r\n              return [...prevData, ...uniqueQuestions];\r\n            });\r\n            setTotalPageData(pgData.payload.questionsCount);\r\n            setHasmore((pgData.payload.questionsCount>(pageData.length+5)))\r\n          }else if(pgData.payload?.error){\r\n            setError(pgData.payload?.error)\r\n          }\r\n          const newData = await dispatch(allQuestions({ limit: 10, page: 1 }));\r\n          if(!newData.payload?.error)\r\n            setQuestionsData(newData.payload);\r\n          else if(pgData.payload?.error)\r\n              setError(pgData.payload?.error)\r\n        }\r\n        fetchData();\r\n    },[pageNum])\r\n  \r\n    return {isloading,hasmore,pageData,totalPageData,questionsData,error}\r\n}\r\n\r\nexport default useFetchHomeData","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileFollowing.component.jsx",["238"],[],"import React, { useEffect, useState } from 'react'\r\nimport Follow from './Follow.component'\r\nimport { getFollowingThunk } from \"../features/asyncThunks/user.thunk\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NoData } from '../assets';\r\n\r\nconst UserProfileFollowing = () => {\r\n\r\n    const [followingsData, setFollowingsData] = useState([])\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const res = await dispatch(getFollowingThunk());\r\n            setFollowingsData(res.payload)\r\n            \r\n        }       \r\n        fetchData();\r\n    },[])\r\n\r\n  return (\r\n    <div className='user-profile-following-container'>\r\n        <div className=\"user-profile-following\">\r\n            {followingsData.length ?\r\n            followingsData.map(following=>{\r\n               return <Follow key={following.id} user={following} />\r\n            }) :\r\n            <div style={{width:\"55vw\"}} ><div className=\"no-data\">\r\n         <p>follow people and they will be shown here!!!</p>\r\n                  <NoData/>\r\n                </div></div>\r\n            }\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfileFollowing","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileMyQuestions.component.jsx",["239"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport MyQuestions from './MyQuestions.component';\r\nimport styled from 'styled-components';\r\nimport { my_Questions } from \"../features/asyncThunks/questions.thunk\"\r\nimport { NoData } from '../assets';\r\n\r\nconst UserProfileMyQuestions = () => {\r\n    const [myQuests, setMyQuests] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const res =await dispatch(my_Questions())\r\n            setMyQuests(res.payload)\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n  return (\r\n    <Component>\r\n    <div className='user-my-questions-container'>\r\n        <div className=\"user-my-questions\">\r\n        {myQuests.length ?\r\n            myQuests.map(quest=>{\r\n                return <MyQuestions key={quest._id} quest={quest} /> \r\n            })\r\n         : \r\n         <div style={{width:\"55vw\"}} ><div className=\"no-data\">\r\n         <p>Ask the questions which will be shown here!!!</p>\r\n                  <NoData/>\r\n                </div></div>\r\n          }\r\n        </div>\r\n    </div>\r\n    </Component>\r\n  )\r\n}\r\n\r\nvar Component = styled.div`\r\n    .user-my-questions-container{\r\n        margin-top:20px;\r\n\r\n        .user-my-questions{\r\n            max-height:65vh;\r\n            overflow-y:auto;\r\n\r\n            ::-webkit-scrollbar{\r\n                background:transparent;\r\n                width:5px;\r\n            }\r\n            ::-webkit-scrollbar-thumb{\r\n                width:5px;\r\n                background-color:rgb(0,0,0,0.4);\r\n                border-radius:20px;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default UserProfileMyQuestions","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileFollowers.component.jsx",["240"],[],"import React, { useEffect, useState } from \"react\";\r\nimport Follow from \"./Follow.component\";\r\nimport { getFollowersThunk } from \"../features/asyncThunks/user.thunk\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { NoData } from \"../assets\";\r\n\r\nconst UserProfileFollowers = () => {\r\n    const [followersData, setFollowersData] = useState([])\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const res = await dispatch(getFollowersThunk());\r\n            setFollowersData(res.payload)\r\n        }       \r\n        fetchData();\r\n    },[])\r\n\r\n  return (\r\n    <div className=\"user-profile-followers-container\">\r\n      <div className=\"user-profile-followers\">\r\n      { followersData.length ?\r\n        followersData.map(follower=>{\r\n            return <Follow key={follower.id} user={follower} />\r\n        }) :\r\n        <div style={{width:\"55vw\"}} ><div className=\"no-data\">\r\n         <p>if a user follows you , it will be shown here !!!</p>\r\n                  <NoData/>\r\n                </div></div>\r\n      }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserProfileFollowers;\r\n","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\components\\UserProfileMyAnswers.component.jsx",["241"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport MyAnswers from './MyAnswers.component'\r\nimport styled from 'styled-components';\r\nimport { my_Answer } from \"../features/asyncThunks/answers.thunk\"\r\nimport { NoData } from '../assets';\r\n\r\nconst UserProfileMyAnswers = () => {\r\n    const [myAnswers, setMyAnswers] = useState([]);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const res =await dispatch(my_Answer())\r\n            setMyAnswers(res.payload)\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n  return (\r\n    <Component>\r\n    <div className='user-my-answers-container'>\r\n        <div className=\"user-my-answers\">\r\n        {myAnswers.length ?\r\n            myAnswers.map(ans=>{\r\n                return <MyAnswers key={ans._id} ans={ans} /> \r\n            })\r\n         :<div style={{width:\"55vw\"}} ><div className=\"no-data\">\r\n         <p>Answer the questions which will be shown here!!!</p>\r\n                  <NoData/>\r\n                </div></div>}\r\n        </div>\r\n    </div>\r\n    </Component>\r\n  )\r\n}\r\n\r\nvar Component = styled.div`\r\n    .user-my-answers-container{\r\n        margin-top:20px;\r\n\r\n        .user-my-answers{\r\n            max-height:65vh;\r\n            overflow-y:auto;\r\n\r\n            ::-webkit-scrollbar{\r\n                background:transparent;\r\n                width:5px;\r\n            }\r\n            ::-webkit-scrollbar-thumb{\r\n                width:5px;\r\n                background-color:rgb(0,0,0,0.4);\r\n                border-radius:20px;\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default UserProfileMyAnswers","C:\\Users\\lalmastar\\OneDrive\\Desktop\\Questify\\questify-frontend\\src\\assets\\index.js",[],[],{"ruleId":"242","severity":1,"message":"243","line":28,"column":6,"nodeType":"244","endLine":28,"endColumn":17,"suggestions":"245"},{"ruleId":"246","severity":1,"message":"247","line":28,"column":6,"nodeType":"244","messageId":"248","endLine":28,"endColumn":17},{"ruleId":"242","severity":1,"message":"249","line":37,"column":6,"nodeType":"244","endLine":37,"endColumn":8,"suggestions":"250"},{"ruleId":"251","severity":1,"message":"252","line":22,"column":9,"nodeType":"253","messageId":"254","endLine":22,"endColumn":17},{"ruleId":"242","severity":1,"message":"249","line":42,"column":5,"nodeType":"244","endLine":42,"endColumn":7,"suggestions":"255"},{"ruleId":"242","severity":1,"message":"243","line":51,"column":5,"nodeType":"244","endLine":51,"endColumn":18,"suggestions":"256"},{"ruleId":"242","severity":1,"message":"257","line":59,"column":5,"nodeType":"244","endLine":59,"endColumn":18,"suggestions":"258"},{"ruleId":"242","severity":1,"message":"249","line":14,"column":5,"nodeType":"244","endLine":14,"endColumn":7,"suggestions":"259"},{"ruleId":"242","severity":1,"message":"249","line":36,"column":6,"nodeType":"244","endLine":36,"endColumn":8,"suggestions":"260"},{"ruleId":"261","severity":1,"message":"262","line":74,"column":25,"nodeType":"263","messageId":"264","endLine":74,"endColumn":37},{"ruleId":"251","severity":1,"message":"265","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":26},{"ruleId":"251","severity":1,"message":"266","line":7,"column":23,"nodeType":"253","messageId":"254","endLine":7,"endColumn":34},{"ruleId":"242","severity":1,"message":"267","line":30,"column":5,"nodeType":"244","endLine":30,"endColumn":17,"suggestions":"268"},{"ruleId":"251","severity":1,"message":"266","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":21},{"ruleId":"242","severity":1,"message":"267","line":19,"column":5,"nodeType":"244","endLine":19,"endColumn":7,"suggestions":"269"},{"ruleId":"251","severity":1,"message":"266","line":8,"column":23,"nodeType":"253","messageId":"254","endLine":8,"endColumn":34},{"ruleId":"242","severity":1,"message":"270","line":38,"column":7,"nodeType":"244","endLine":38,"endColumn":16,"suggestions":"271"},{"ruleId":"242","severity":1,"message":"267","line":20,"column":7,"nodeType":"244","endLine":20,"endColumn":9,"suggestions":"272"},{"ruleId":"242","severity":1,"message":"267","line":19,"column":7,"nodeType":"244","endLine":19,"endColumn":9,"suggestions":"273"},{"ruleId":"242","severity":1,"message":"267","line":18,"column":7,"nodeType":"244","endLine":18,"endColumn":9,"suggestions":"274"},{"ruleId":"242","severity":1,"message":"267","line":19,"column":7,"nodeType":"244","endLine":19,"endColumn":9,"suggestions":"275"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'navigate'. Either include them or remove the dependency array.","ArrayExpression",["276"],"no-sparse-arrays","Unexpected comma in middle of array.","unexpectedSparseArray","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["277"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar",["278"],["279"],"React Hook useEffect has missing dependencies: 'dispatch' and 'question_id'. Either include them or remove the dependency array.",["280"],["281"],["282"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'useEffect' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["283"],["284"],"React Hook useEffect has missing dependencies: 'dispatch' and 'pageData.length'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setHasmore' needs the current value of 'pageData.length'.",["285"],["286"],["287"],["288"],["289"],{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"292","fix":"294"},{"desc":"295","fix":"296"},{"desc":"297","fix":"298"},{"desc":"292","fix":"299"},{"desc":"292","fix":"300"},{"desc":"301","fix":"302"},{"desc":"303","fix":"304"},{"desc":"305","fix":"306"},{"desc":"303","fix":"307"},{"desc":"303","fix":"308"},{"desc":"303","fix":"309"},{"desc":"303","fix":"310"},"Update the dependencies array to be: [dispatch, navigate, question]",{"range":"311","text":"312"},"Update the dependencies array to be: [navigate]",{"range":"313","text":"314"},{"range":"315","text":"314"},"Update the dependencies array to be: [dispatch, navigate, question_id]",{"range":"316","text":"317"},"Update the dependencies array to be: [answerAdded, dispatch, question_id]",{"range":"318","text":"319"},{"range":"320","text":"314"},{"range":"321","text":"314"},"Update the dependencies array to be: [dispatch, questionID]",{"range":"322","text":"323"},"Update the dependencies array to be: [dispatch]",{"range":"324","text":"325"},"Update the dependencies array to be: [dispatch, pageData.length, pageNum]",{"range":"326","text":"327"},{"range":"328","text":"325"},{"range":"329","text":"325"},{"range":"330","text":"325"},{"range":"331","text":"325"},[1071,1082],"[dispatch, navigate, question]",[1116,1118],"[navigate]",[1252,1254],[1497,1510],"[dispatch, navigate, question_id]",[1687,1700],"[answerAdded, dispatch, question_id]",[347,349],[1071,1073],[1173,1185],"[dispatch, questionID]",[620,622],"[dispatch]",[1712,1721],"[dispatch, pageData.length, pageNum]",[616,618],[622,624],[603,605],[610,612]]